:- import concat_atom/2 from string.

type(bool, [t, f]).
outcomes(edge, [bool, bool]).
set_sw(edge, [0.49, 0.01, 0.01, 0.49]).

row_edges(1, N1, N2, N3, N4, N5) :-
    msw(edge, e_11_12, [N1, N2]),
    msw(edge, e_12_13, [N2S, N3]),
    msw(edge, e_13_14, [N3S, N4]),
    msw(edge, e_14_15, [N4S, N5]),
    {N2 = N2S},
    {N3 = N3S},
    {N4 = N4S}.

row_edges(R, N1, N2, N3, N4, N5) :-
    1 < R, R =< 5,
    R1 is R - 1,
    column_edges(R1, R, M1, M2, M3, M4, M5),

    concat_atom([e,'_',R,1,'_',R,2], E1),
    concat_atom([e,'_',R,2,'_',R,3], E2),    
    concat_atom([e,'_',R,3,'_',R,4], E3),    
    concat_atom([e,'_',R,4,'_',R,5], E4),    
    msw(edge, E1, [N1, N2]),
    msw(edge, E2, [N2S, N3]),
    msw(edge, E3, [N3S, N4]),
    msw(edge, E4, [N4S, N5]),

    {N2 = N2S},
    {N3 = N3S},
    {N4 = N4S},

    {M1 = N1},
    {M2 = N2},
    {M3 = N3},
    {M4 = N4},
    {M5 = N5}.

column_edges(R1, R2, M1, M2, M3, M4, M5) :-
    row_edges(R1, N1, N2, N3, N4, N5),

    concat_atom([e,'_',R1,1,'_',R2,1], E1),
    concat_atom([e,'_',R1,2,'_',R2,2], E2),
    concat_atom([e,'_',R1,3,'_',R2,3], E3),
    concat_atom([e,'_',R1,4,'_',R2,4], E4),
    concat_atom([e,'_',R1,5,'_',R2,5], E5),
    
    msw(edge, E1, [M1S, M1]),
    msw(edge, E2, [M2S, M2]),
    msw(edge, E3, [M3S, M3]),
    msw(edge, E4, [M4S, M4]),
    msw(edge, E5, [M5S, M5]),

    {M1S = N1},
    {M2S = N2},
    {M3S = N3},
    {M4S = N4},
    {M5S = N5}.
    
    
evidence :-
    row_edges(5, N1, N2, N3, N4, N5).

query :-
    query_row(5),
    query_col(5).

query_row(0).
query_row(N) :-
    N > 0,
    concat_atom([e,'_',N,1,'_',N,2], E1),
    concat_atom([e,'_',N,2,'_',N,3], E2),
    concat_atom([e,'_',N,3,'_',N,4], E3),
    concat_atom([e,'_',N,4,'_',N,5], E4),

    msw(edge, E1, [N1, N2]),
    msw(edge, E2, [N2S, N3]),
    msw(edge, E3, [N3S, N4]),
    msw(edge, E4, [N4S, N5]),

    {N1 = t},
    {N2 = t},
    {N2S = t},
    {N3 = t},
    {N3S = t},
    {N4 = t},
    {N4S = t},
    {N5 = t},

    N1 is N-1,
    query_row(N1).

query_col(1).
query_col(N2) :-
    N2 > 1,
    N1 is N2 - 1,

    concat_atom([e,'_',N1,1,'_',N2,1], E1),
    concat_atom([e,'_',N1,2,'_',N2,2], E2),
    concat_atom([e,'_',N1,3,'_',N2,3], E3),
    concat_atom([e,'_',N1,4,'_',N2,4], E4),
    concat_atom([e,'_',N1,5,'_',N2,5], E5),

    msw(edge, E1, [M1S, M1]),
    msw(edge, E2, [M2S, M2]),
    msw(edge, E3, [M3S, M3]),
    msw(edge, E4, [M4S, M4]),
    msw(edge, E5, [M5S, M5]),
   
    query_col(N1).

qe :- evidence, query.
