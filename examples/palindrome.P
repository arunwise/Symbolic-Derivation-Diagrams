values(flip, [a,b]).
set_sw(flip, [0.5, 0.5]).

genlist(0, []).
genlist(N, L) :-
    N > 0,
    msw(flip, N, X),
    L = [X | L1],
    N1 is N-1,
    genlist(N1, L1).

palindrome([]).
palindrome([_X]).
palindrome([H|R]) :-
    R \= [],
    reverse(R, [T|R1]),
    {H=T},
    palindrome(R1).
    

numoccurs(L, X, N) :-
    numoccurs(L, X, 0, N).

numoccurs([], _, N, N).
numoccurs([H|T], X, Nin, Nout) :-
    {X = H},
    N1 is Nin + 1,
    numoccurs(T, X, N1, Nout).
numoccurs([H|T], X, Nin, Nout) :-
    {X \= H},
    numoccurs(T, X, Nin, Nout).

%% copied from lists package
reverse([], []).
reverse([H|T], L) :-
	reverse1(T, L, [H]).

reverse1([], L, L).
reverse1([H|T], L, L1) :-
	reverse1(T, L, [H|L1]).

evidence(N) :-
    genlist(N, L),
    palindrome(L).

query(N, A) :-
    genlist(N, L),
    numoccurs(L, a, A).

qe(N, A) :-
    query(N, A),
    evidence(N).
